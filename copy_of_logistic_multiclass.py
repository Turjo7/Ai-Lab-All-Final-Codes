# -*- coding: utf-8 -*-
"""Copy of Logistic_Multiclass.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12Ex3jhyJs4bD64E9QIrirKOg2Q551_wF
"""

from sklearn.datasets import load_digits
# %matplotlib inline
import matplotlib.pyplot as plt
digits = load_digits()

plt.gray() 
for i in range(5):
    plt.matshow(digits.images[i])

dir(digits)

digits.data[0]

from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter= 200)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(digits.data,digits.target, test_size=0.2)

model.fit(X_train, y_train)

model.score(X_test, y_test)

model.predict(digits.data[0:5])

y_predicted = model.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_predicted)
cm



import seaborn as sn
plt.figure(figsize = (10,7))
sn.heatmap(cm, annot=True)
plt.xlabel('Predicted')
plt.ylabel('Truth')

# Online Task
# Divide this iris dataset into train and test. Split will be 75-25 into train-test.
# Train for 1000 iterations 
# Write down the test accuracy
# Plot the confusion matrix for train set.
from sklearn.datasets import load_iris
iris = load_iris()
print(iris)
dir(iris)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter= 1000)
print(model)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(iris.data,iris.target, test_size=0.25)

model.fit(X_train, y_train)

model.score(X_test, y_test)

model.predict(iris.data[0:5])

y_predicted = model.predict(X_train)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_train, y_predicted)

cm

import seaborn as sn
plt.figure(figsize = (10,7))
sn.heatmap(cm, annot=True)
plt.xlabel('Predicted')
plt.ylabel('Truth')